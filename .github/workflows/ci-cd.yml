name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set Up JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      # Step 3: Build with Maven
      - name: Build with Maven
        run: mvn clean package

      # Step 4: Archive the Build Artifacts
      # This ensures the JAR file is available for subsequent steps, including Docker
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar-file
          path: target/StockTickerProject-1.0-SNAPSHOT.jar

  dockerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Download JAR Artifact
      # Retrieve the previously built JAR file
      - name: Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: StockTickerProject-1.0-SNAPSHOT.jar
          path: ./StockTickerProject/target

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build Docker Image
      - name: Build Docker Image
        run: docker build -t kaspermaukkonen/stock-ticker .

      # Step 5: Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: docker push kaspermaukkonen/stock-ticker
